name: Build Docker Image for the Frontend

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "README.md"
      - "backend/**"
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/frontend

jobs:
  build_frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]

    steps:
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          npm install
          npm ci

      - name: build
        working-directory: ./frontend
        run: |
          npm run build

      - name: temporarily save build files
        uses: actions/upload-artifact@v3
        with:
          name: npm-build-artifact
          path: ./frontend/build
          retention-days: 1

  build_and_publish_frontend_docker_image:
    runs-on: ubuntu-latest
    needs: build_frontend
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PUBLISH_IMAGE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: latest

      - name: retrieve build files
        uses: actions/download-artifact@v3
        with:
          name: npm-build-artifact
          path: ./frontend/build

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./conf/dockerfiles/Dockerfile.frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
